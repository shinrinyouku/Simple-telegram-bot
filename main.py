import telebot
from telebot import types
import sqlite3
import random
from dotenv import load_dotenv
import os

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

jokes = [
    "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã —Ç–∞–∫ –Ω–µ –ª—é–±—è—Ç –ø–µ—Ä–µ—Ä—ã–≤—ã? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –±–æ—è—Ç—Å—è, —á—Ç–æ –∏—Ö –∫–æ–¥ –≤—ã–π–¥–µ—Ç –∏–∑ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.",
    "–ö–∞–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç —Å–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å? –ü–∏—à–µ—Ç –Ω–∞ –±—É–º–∞–≥–µ 'print(\"Hello World\")'.",
    "–ü–æ—á–µ–º—É —Å–µ—Ä–≤–µ—Ä—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Ç–¥—ã—Ö–∞—é—Ç? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –≤—Å–µ–≥–¥–∞ –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è.",
    "–Ø –ø—ã—Ç–∞–ª—Å—è –æ—Ç–ª–∞–¥–∏—Ç—å –∂–∏–∑–Ω—å, –Ω–æ –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞."
]

def get_suggestion(category, genre):
    conn = sqlite3.connect('media.db')
    c = conn.cursor()
    if category == "audiobooks":
        c.execute("SELECT title, image_url, audio_url FROM audiobooks WHERE genre=?", (genre,))
    else:
        c.execute(f"SELECT title, image_url FROM {category} WHERE genre=?", (genre,))
    results = c.fetchall()
    conn.close()
    return random.choice(results) if results else None

@bot.message_handler(commands=['start'])
def start_handler(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("\U0001F4DA –ö–Ω–∏–≥–∞", "\U0001F4D6 –ú–∞–Ω–≥–∞", "\U0001F4D5 –ö–æ–º–∏–∫—Å", "\U0001F3A7 –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞", "üéâ –ü–∞—Å—Ö–∞–ª–∫–∞")
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—á–∏—Ç–∞—Ç—å/–ø–æ—Å–ª—É—à–∞—Ç—å?", reply_markup=markup)

@bot.message_handler(func=lambda m: m.text in ["\U0001F4DA –ö–Ω–∏–≥–∞", "\U0001F4D6 –ú–∞–Ω–≥–∞", "\U0001F4D5 –ö–æ–º–∏–∫—Å", "\U0001F3A7 –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞"])
def handle_category(message):
    category_map = {
        "\U0001F4DA –ö–Ω–∏–≥–∞": "books",
        "\U0001F4D6 –ú–∞–Ω–≥–∞": "manga",
        "\U0001F4D5 –ö–æ–º–∏–∫—Å": "comics",
        "\U0001F3A7 –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞": "audiobooks"
    }
    category = category_map[message.text]
    genre_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    genre_markup.add("—Ñ—ç–Ω—Ç–µ–∑–∏", "–¥–µ—Ç–µ–∫—Ç–∏–≤", "—Ä–æ–º–∞–Ω—Ç–∏–∫–∞", "\U0001F519 –ù–∞–∑–∞–¥", "üéâ –ü–∞—Å—Ö–∞–ª–∫–∞")
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏ –∂–∞–Ω—Ä –¥–ª—è {message.text.lower()}:", reply_markup=genre_markup)
    bot.register_next_step_handler(message, lambda m: genre_handler(m, category))

@bot.message_handler(func=lambda m: m.text == "üéâ –ü–∞—Å—Ö–∞–ª–∫–∞")
def send_easter_egg_video(message):
    try:
        with open("C:/Users/–∞–¥–º–∏–Ω/Desktop/daddy/game/Bot/888,.mp4", "rb") as video:
            bot.send_video(message.chat.id, video)
    except FileNotFoundError:
        bot.send_message(message.chat.id, "‚ùå –í–∏–¥–µ–æ –ø–∞—Å—Ö–∞–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

@bot.message_handler(func=lambda m: m.text == "\U0001F519 –ù–∞–∑–∞–¥")
def back_to_start(message):
    start_handler(message)

@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–Ω–∏–≥, –º–∞–Ω–≥–∏, –∫–æ–º–∏–∫—Å–æ–≤ –∏ –∞—É–¥–∏–æ–∫–Ω–∏–≥.\n"
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        "/start ‚Äî –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:\n"
        "üìö –ö–Ω–∏–≥–∞\n"
        "üìñ –ú–∞–Ω–≥–∞\n"
        "üìô –ö–æ–º–∏–∫—Å\n"
        "üéß –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞\n"
        "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —è –ø–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä –∏ –Ω–∞–π–¥—É –¥–ª—è –≤–∞—Å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ.\n"
        "–¢–∞–∫–∂–µ –µ—Å—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ! üòâ"
    )
    bot.send_message(message.chat.id, help_text)

def genre_handler(message, category):
    if message.text == "\U0001F519 –ù–∞–∑–∞–¥":
        start_handler(message)
        return

    suggestion = get_suggestion(category, message.text.lower())
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("\U0001F519 –ù–∞–∑–∞–¥")

    if not suggestion:
        bot.send_message(message.chat.id, "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ —ç—Ç–æ–º—É –∂–∞–Ω—Ä—É.", reply_markup=markup)
        return

    if category == "audiobooks":
        title, image_url, audio_url = suggestion
        if image_url:
            bot.send_photo(message.chat.id, image_url, caption=title)
        if audio_url:
            try:
                bot.send_audio(message.chat.id, audio_url, caption="\U0001F3A7 –°–ª—É—à–∞–π –ø—Ä—è–º–æ –∑–¥–µ—Å—å", reply_markup=markup)
            except:
                bot.send_message(message.chat.id, f"{title}\n(‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ)", reply_markup=markup)
    else:
        title, image_url = suggestion
        if image_url:
            try:
                bot.send_photo(message.chat.id, image_url, caption=f"–°–æ–≤–µ—Ç—É—é: {title}", reply_markup=markup)
            except:
                bot.send_message(message.chat.id, f"–°–æ–≤–µ—Ç—É—é: {title}\n(‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, f"–°–æ–≤–µ—Ç—É—é: {title}", reply_markup=markup)

    joke_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    joke_markup.add("–î–∞", "–ù–µ—Ç")
    bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ –∞–Ω–µ–∫–¥–æ—Ç?", reply_markup=joke_markup)
    bot.register_next_step_handler(message, handle_joke_response)

def handle_joke_response(message):
    if message.text == "–î–∞":
        joke = random.choice(jokes)
        bot.send_message(message.chat.id, joke)
        genre_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        genre_markup.add("—Ñ—ç–Ω—Ç–µ–∑–∏", "–¥–µ—Ç–µ–∫—Ç–∏–≤", "—Ä–æ–º–∞–Ω—Ç–∏–∫–∞", "\U0001F519 –ù–∞–∑–∞–¥", "üéâ –ü–∞—Å—Ö–∞–ª–∫–∞")
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä:", reply_markup=genre_markup)
        bot.register_next_step_handler(message, lambda m: genre_handler(m, "books"))
    elif message.text == "–ù–µ—Ç":
        start_handler(message)

bot.polling(none_stop=True)
